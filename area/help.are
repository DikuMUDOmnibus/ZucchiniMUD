#HELPS
0 COLOUR1 COLOR1 ANSI1~
Syntax: colour    Toggles colour mode on/off

You may also talk in colour; the format is like this: the 'escape character' 
to specify a colour is the left handed brace '{{'. Following that you should 
use one of the following letters:

{r{{r red      {R{{R bold red        {y{{y yellow    {Y{{Y bold yellow
{c{{c cyan     {C{{C bold cyan       {g{{g green     {G{{G bold green
{m{{m magenta  {M{{M bold magenta    {b{{b blue      {B{{B bold blue
{w{{w white    {W{{W bold white      {D{{D gray
{x
{{{{ {{ character
{{* beep
{{/ new line
{{x clear all colors and return to normal

{{T {Tred background{x    {{J {Jyellow background{x  {{$ {D{$green background{x
{{U {Ublue background{x   {{P {Pmagenta background{x {{v {D{vcyan background{x
{{V {D{Vwhite background{x  {{0 {0black background{x

{{u toggle {uinverse text{x

To write in colour on a coloured background, use the colour code immediately 
followed by the background colour code, as follows:

{{D{{$ produces {D{$gray text on a green background{x
{{b{{V produces {b{Vblue text on a white background{x
{{Y{{P produces {Y{Pyellow text on a magenta background - ouch!{x

When using colour, be sure to end with {{x or your colours (particularly 
background colours) can bleed onto the next line, making everything ugly or 
even totally illegible. If you consistently bleed colors, you WILL be 
punished.

ColoUr is written by Lope (ant@solace.mh.se)

see also: {gcolour2{x
~

0 COLOUR2 COLOR2 ANSI2~
Syntax: colour <field> <colour>

You may configure your colour settings for personal preference.
Current setting are indicated by colour.

Fields are:                                    
  {ttext         {aauction      {dgossip       {emusic        {qquestion
  {hclass_text   {Hclass_name   {iimmtalk_text {Iimmtalk_type {jinfo         
  {ktell         {lreply        {ngtell_text   {Ngtell_type   {Zwiznet       
  {sroom_title   {Sroom_text    {oroom_exits   {Oroom_things  {pprompt       
  {1fight_death  {2fight_yhit   {3fight_ohit   {4fight_thit   {5fight_skill{x

Colours are: 
  {rred          {ggreen        {bblue         {yyellow       {mmagenta
  {ccyan         {wwhite        {Rhi-red       {Ghi-green     {Bhi-blue     
  {Yhi-yellow    {Mhi-magenta   {Chi-cyan      {Whi-white{x

eg. to make the gossip channel red type 'colour gossip red'
    to make your hits in fights magenta type 'colour fight_yhit magenta' 
    
See also: {gcolour1{x
~

0 I3 I3HELP~
Syntax: i3 <option>

Note: You must be at least level 10 before accessing I3.

General Usage:
------------------------------------------------

List channels available                : i3 chanlist [all] [filter]
To tune into a channel                 : i3 listen <localchannel>
To see who is listening on another mud : i3 chanwho <channel> <mud>
List muds connected to I3              : i3 mudlist [filter]
Information on another mud             : i3 mudinfo <mud>
Ignore someone who annoys you          : i3 ignore <person@mud>
Make yourself invisible to I3          : i3 invis

i3 chanlist: Lists the channels the mud has available to listen to.
  Specifying 'all' will list the channels for the entire network.

i3 listen  : Tunes you in to the specified channel. You must meet or
  exceed whatever the minimum level is for that channel to do so,
  and your mud must have the channel configured locally.

i3 chanwho : Shows you who is listening to the specified channel on the
  specified mud. Invisble players will not be shown.

i3 mudlist : Lists the muds which are connected to the network.
  Specifying a filter will narrow the list down to only those muds
  whose information matches. IE: &Wi3 mudlist smaug&D will list all
  muds who have &Wsmaug&D as part of their listing.

i3 mudinfo : Lists the information provided by the specified mud.

i3 ignore  : Allows you to selectively ignore all contact with person@mud.
  This will block tells, beeps, locates, fingers, emotes, and whos. It will also
  block channel output from them, but will NOT block them from seeing YOU on
  a channel.

i3 invis   : Makes you invisible to I3. Performs similar to the ignore option
  except it prevents EVERYONE on the network from finding you. You will still
  be able to use channels, and you will NOT be invisible to others if you
  do so.

See also: {gi3beep i3tell i3finger i3emote i3locate i3who{x
~

0 GOLD SILVER ZLOTYS MONEY~
Midgaard's economy is based on the zloty, a convenient weightless currency. 
Gone are the gem-sacks and money changers of yore, but the jeweler still sells 
diamonds if you need a new best friend.

See also: {gbanking{x
~

0 I3BEEP~
Syntax: i3beep <person@mud>

i3beep sends a quick message to a person on another mud.
If the target mud supports the beep tone, then the person
on that mud will hear the standard beep tone used by whatever
client software they are using. Works in the same manner as
the local beep command.

See also: I3, INTERMUD3
~

0 I3EMOTE~
Syntax i3emote <person@mud> <message>

Sends a private emote to a person on another mud.

See also: I3, INTERMUD3
~

0 I3FINGER~
Syntax i3finger <person@mud>

Request for information regarding a player on another mud.
Operates in a similar manner to the local 'finger' command.
Will only reveal information the target mud feels is appropriate.

See also: I3, INTERMUD3
~

0 I3LOCATE~
Syntax i3locate <name>

Asks all the muds on the Intermud-3 network if a person
known by the name is there. Be patient when using this command,
there are a lot of muds on the network to search through, so
a response may take some time to come back.

See also: I3, INTERMUD3
~

0 I3TELL I3REPLY~
Syntax: i3tell <person@mud> <message>
Syntax: i3reply <message>

i3tell sends a private message to a person on another mud.
To send a tell to someone on a mud with a multi-word name, you need to
enlcose person@mud in quotes, like so: i3tell 'person@mud with long name'
Otherwise this command operates in much the same way as the local tell command.

To reply to the last i3tell you received, simply type 'i3reply'
followed by your message and it will be sent back to the last
person on I3 who sent a tell to you. Works in the same manner
as the local reply command.

See also: {gi3 intermud3{x
~

0 I3WHO~
Syntax i3who <mud>

Requests an overview of players on a different mud.
Operates similarly to the local who command.

See also: {gi3 intermud3{x
~

0 INTERMUD3~
Intermud-3 is a protocol which allows you to chat with people on other muds who 
are also connected to Intermud-3. It is primarily populated by LP based muds at 
this time, but the hope is to get more Diku based muds to join over time. While 
some may say that Diku based muds would be better served on the IMC Network, it
is far easier for a mud to obtain a connection to the Intermud-3 network, and 
the commands to use it are generally simpler. In either case, should a mud 
desire it, Intermud-3 will coexist peacefully with an IMC enabled mud. Currently
there is no way for public or private traffic to be passed from one network to
the other.

See also: {gi3{x
~

0 BANKING BALANCE WITHDRAW DEPOSIT~
The Midgaard Community Credit Union offers savings accounts free of charge to
all residents of Zucchini. Your savings account is protected from thievery,
death and market depreciation with a beautiful shimmering force field.

At any bank branch, type 'balance' to see your balance, 'deposit 50' to deposit
50 zlotys, or 'withdraw 11' to withdraw 11 zlotys. New branches are planned for
New Thalos and the Dwarven Kingdom.

See also: {gmoney{x
~

0 BRIEF COMPACT~
Brief and compact help set your display options for the game. Typing brief
toggles on and off the showing of room descriptions when you move around
(considerably reducing the text to be processed), and typing compact 
removes the extra blank line before your prompt.
~

-1 DEAF~
The deaf toggle turns off incoming tells, helpful if you are being bombarded
by messages from other players.  You can still use reply (see 'help reply') to
reply to people who were telling you before you went deaf, although you
cannot reply to a deaf person unless you or they are a diety (it's mostly 
useful for sending a quick "I'm being spammed so I went deaf" message to
a person).
~

-1 AFK~
Typing AFK puts your character in a tell-saving mode as follows: any tell
to you is stored in a special buffer, and can be seen later by typing
recall.  This is useful when you need to leave the mud for 5 or 10 minutes,
but don't want to miss tells.  AFK shows up in your prompt until it is
turned off.

Tells to link-dead players are stored in a similar fashion, and can also be
seen by typing replay (unless, of course, the character logs off before
reading them).
~

-1 PROMPT~
Syntax: prompt
Syntax: prompt all
Syntax: prompt <%*>
 
PROMPT without an argument will turn your prompt on or off.
 
PROMPT ALL will give you the standard "<hits mana moves>" prompt.
 
PROMPT <%*> where the %* are the various variables you may set yourself.
 
        %h :  Display your current hits
        %H :  Display your maximum hits
        %m :  Display your current mana
        %M :  Display your maximum mana
        %v :  Display your current moves
        %V :  Display your maximum moves
        %x :  Display your current experience
		%X :  Display experience to level
        %g :  Display your gold held
		%s :  Display silver carried
        %a :  Display your alignment
        %r :  Display the room name you are in
		%e :  Display the exits from the room in NESWDU style
		%c :  Display a carriage return (useful for multi-line prompts)
        %R :  Display the vnum you are in (IMMORTAL ONLY)
        %z :  Display the area name you are in (IMMORTAL ONLY)
 
Example:  PROMPT <%hhp %mm %vmv>
        Will set your prompt to "<10hp 100m 100mv>"
 
~

-1 SUMMARY~
{gMOVEMENT                             GROUP{x
north south east west up down        follow group gtell split
exits recall
sleep wake rest stand

{gOBJECTS                              INFORMATION / COMMUNICATION{x
get put drop give sacrifice donate   help credits snippets commands areas
wear wield hold                      report score time weather where who
recite quaff zap brandish            description password title
lock unlock open close pick          bug idea typo
inventory equipment look compare     gossip say shout tell yell
eat drink fill                       emote pose
list buy sell value                  note

{gCOMBAT                               OTHER{x
kill flee kick rescue disarm         ! save quit
backstab cast wimpy                  practice train

Type 'commands' for a list of commands and 'socials' for a list of socials.
For more help, type 'help <topic>' for any command, skill, or spell.
Also help on: DAMAGE DEATH EXPERIENCE NEWS STORY TICK WIZLIST
~

0 DEATH~
When your character dies, you are reincarnated back at the Altar of the Temple
of Zucchini.  Your corpse is left behind in the room where you were killed,
together with all of your equipment.

Any spells which were affecting you are canceled by death.

Following and groups are not affected by death.

You lose experience points for dying.  The amount you lose is two-thirds of 
the way back to the beginning of your level.

Corpses decay after time, and the objects inside corpses decay with them.
Player corpses last *roughly* 30 hours of game time (15 minutes of real time).
Only the player who died, or someone in the same group, can retrieve objects
from a player's corpse.

~

0 KILL MURDER~
Syntax: kill <char>
Syntax: murder <char>

Kill starts a fight with a mob; murder starts a fight with another player. You
may also murder mobs; they respond slightly differently to a murder than to an
ordinary kill.

See also: {Gpkill{x
~

0 EXPERIENCE LEVEL XP~
Your character advances in power by gaining experience.  You need a set 
amount of experience points for each level based on your creation points.

You gain experience by:

    being part of a group that kills a monster

You lose experience by:

    fleeing from combat
    recalling out of combat
    being the target of certain spells
    dying

The experience you get from a kill depends on several things: how many players
are in your group; your level versus the level of the monster; your alignment
versus the monster's alignment; how many of this monster have been killed
lately; and some random variation.
~

0 QUEST AUTOQUEST~
Running around killing mobs can get just a wee bit boring. To break up the
monotony there are quests: fun games and scenarios orchestrated by the
immortal staff, or slightly less fun tasks generated by a questmaster mob
(check upstairs at the Cabaret Voltaire). Completing a quest will earn you
some quest points, which can be exchanged for fabulous goods and services.

Autoquest commands:
quest request  - ask the questmaster for a quest
quest info     - display the object of your current quest
quest time     - display the amount of time left on your quest
quest complete - finish your quest and receive your reward
quest list     - list the fabulous items you can buy from the questmaster
quest buy      - buy a fabulous item

See also: {g'brownie points'{x
~

0 'BROWNIE POINTS'~
Brownie points are a bit like quest points, but more valuable. You earn
brownie points by doing favors for the imms - finding bugs and typos, acting
as a thesaurus for builders, etc. - or being caught while doing a Good Mud 
Deed.

Brownie points can be spent on favors from the imms:

Restore - 1 point
Spellup - 2 points
Remove anti-alignment flags from an item - 3 points
Restring an item - 5 points
Anything else - negotiable

Keep in mind that favors will not be granted instantly; don't ask to be
restored in the middle of combat.
~

0 PET PETS~
You can buy pets in the pet shop.  You may own only one pet at a time, after 
the old one dies you may purchase a replacement.
~

0 TICK~
Many of the game actions are based upon interval timers, including combat,
most autonomous monster actions, hp/mana/move regeneration, spell duration,
weather, and area resetting.

Of these timers, the hp/mana/move regeneration timer is popularly called the
'tick'.  Ticks on this mud average 30 seconds of real time, but the actual
amount varies randomly from 15 seconds to 45 seconds.

Area resetting happens roughly every 3 minutes if no one is in the area; less
often (15 minutes) if some one is.  Also note that objects lying on the ground
will not be regenerated if anyone is in the area when it resets.
~

0 !~
Syntax: !

! repeats the last command you typed.
~

0 NORTH SOUTH EAST WEST UP DOWN~
Syntax: north
Syntax: south
Syntax: east
Syntax: west
Syntax: up
Syntax: down

Use these commands to walk in a particular direction.
~

0 CAST~
Syntax: cast <spell> <target>

Before you can cast a spell, you have to practice it.  The more you practice,
the higher chance you have of success when casting.  Casting spells costs mana.
The mana cost decreases as your level increases.

The <target> is optional.  Many spells which need targets will use an
appropriate default target, especially during combat.

If the spell name is more than one word, then you must quote the spell name.
Example: cast 'cure critic' frag.  Quoting is optional for single-word spells.
You can abbreviate the spell name.

When you cast an offensive spell, the victim usually gets a saving throw.
The effect of the spell is reduced or eliminated if the victim makes the
saving throw successfully.

See also the help sections for individual spells.
~

0 EXITS~
Syntax: exits

Tells you the visible exits of the room you are in.  Not all exits are visible.
You can use the 'bump' technique to find hidden exits.  (Try to walk in a
certain direction and see what you bump into).
~

0 DROP GET GIVE PUT TAKE~
Syntax: drop <object>
Syntax: drop <amount> coins
Syntax: get  <object>
Syntax: get  <object> <container>
Syntax: give <object> <character>
Syntax: give <amount> coins <character>
Syntax: put  <object> <container>

DROP drops an object, or some coins, on the ground.

GET gets an object, either lying on the ground, or from a container, or even
from a corpse.  TAKE is a synonym for get.

GIVE gives an object, or some coins, to another character.

PUT puts an object into a container.

DROP, GET and PUT understand the object names 'ALL' for all objects and
'ALL.object' for all objects with the same name.
~

0 EQUIPMENT INVENTORY~
Syntax: equipment
Syntax: inventory

EQUIPMENT lists your equipment (armor, weapons, and held items).
INVENTORY lists your inventory.
~

0 COMPARE~
Syntax: compare <object-1> <object-2>
Syntax: compare <object>
 
COMPARE compares two objects in your inventory.  If both objects are weapons,
it will report the one with the better average damage.  If both objects are
armor, it will report the one with the better armor class.
 
COMPARE with one argument compares an object in your inventory to the object
you are currently wearing or wielding of the same type.
 
COMPARE doesn't consider any special modifiers of the objects.
~

0 FLEE~
Syntax: flee
Syntax: rescue   <character>

Once you start a fight, you can't just walk away from it.  If the fight
is not going well, you can attempt to FLEE, or another character can
RESCUE you.  (You can also RECALL, but this is less likely to work,
and costs more experience points, then fleeing).

If you lose your link during a fight, then your character will keep
fighting, and will attempt to RECALL from time to time.  Your chances
of making the recall are reduced, and you will lose much more experience.
~

0 EXAMINE LOOK~
Syntax: look
Syntax: look    <object>
Syntax: look    <character>
Syntax: look    <direction>
Syntax: look    <keyword>
Syntax: look in <container>
Syntax: look in <corpse>
Syntax: examine <container>
Syntax: examine <corpse>

LOOK looks at something and sees what you can see.

EXAMINE is short for 'LOOK container' followed by 'LOOK IN container'.
~

0 ORDER~
Syntax: order <character> command
Syntax: order all command

ORDER orders one or all of your charmed followers (including pets) to
perform any command.  The command may have arguments.  You are responsible
for the actions of your followers, and others who attack your followers
will incur the same penalty as if they attacked you directly.

Most charmed creatures lose their aggresive nature (while charmed).

If your charmed creature engages in combat, that will break the charm.
~

0 REST SLEEP SIT STAND WAKE~
Syntax: rest
Syntax: sleep
Syntax: sit
Syntax: stand
Syntax: wake

These commands change your position.  When you REST or SLEEP, you 
regenerate hit points, mana points, and movement points faster.
However, you are more vulnerable to attack, and if you SLEEP,
you won't hear many things happen.

Use STAND or WAKE to come back to a standing position.  You can
also WAKE other sleeping characters.
~

0 GTELL ; REPLY SAY TELL~
Syntax: gtell <message>
Syntax: say   <message>
Syntax: tell  <character> <message>

All of these commands send messages to other players.  GTELL sends a message to
all of the characters in your group, wherever they are, even if they are
sleeping or stunned or dying.  ';' is a synonym for GTELL.

SAY sends a message to all awake players in your room.  The single quote '''
is a synonym for SAY.

TELL sends a message to one awake player anywhere in the world.

REPLY sends a message to the last player who sent you a TELL.  REPLY will work
even if you can't see the player, and without revealing their identity.  This
is handy for talking to invisible or switched immortal players.
~

0 WHISPER~
Syntax: whisper <character> <message>

Whisper sends a private message to another character in the same room as you.
Other players in the room will see that you whispered something, but will not
know what.
~

0 NOTE 'NOTE WRITE' 'NOTE READ' BOARD 'NOTE SYSTEM' BOARDS~
Syntax:

board [number|name]                     Shows or changes board.
note                                    Reads next note.
note read [number]                      Reads a certain note.
note remove <number>                    Removes a note written by you.
note list [number]                      Shows up to number notes.
note write                              Posts a note.
note catchup                            Marks all notes in this board read.

These commands are used for the new note system. Instead of just one board, 
there are several, each with its special purpose. 

Changing between the boards is accomplished using the BOARD command. BOARD
without any arguments gives you a list of all boards together with number of
unread message. To change, type BOARD <number> or BOARD <name of the board>.

To read next unread note, type NOTE. To read a note with a specified number,
type NOTE READ <number>. Typing NOTE while in a board with no unread notes
shifts you to the next board. Note that unlike the standard note system, a 
note has the same number in NOTE LIST and NOTE READ.

Posting a message is as simple as writing NOTE WRITE. You will be moved 
into interactive mode, where all you see are prompts for the fields like 
To:, From: etc. You will be automatically put AFK while writing a note.

To see the list of the notes in the current board, type NOTE LIST. Typing
NOTE LIST <number> will list only <number> of the last notes in the area.

You can remove your own note by using NOTE REMOVE <number>. Implementors may
remove other people's notes. Implementors can also select how many days
their note is kept before being purged. Purging happens automatically at
bootup. Purged notes are not deleted, but saved into a file.

To let only immortals see your note, address it to "imm". To let players of
a specific level and above, address it to that level (no other recipients may
appear in that case).

This board system was created by Erwin S. Andreasen, erwin@pip.dknet.dk, aka
Phunk/Drylock and is freely available. The general outlook was based on
Mystic Adventure's note system (mud.gel.ulaval.ca 4000).
~

0 GOSSIP . QA AUCTION MUSIC GRATS QUESTION ANSWER QUOTE SHOUT YELL CHANNELS~
Syntax: gossip/music/question/answer/quote/grats/auction  <message>
Syntax: shout   <message>
Syntax: yell    <message>
Syntax: channels

SHOUT sends a message to all awake players in the world.  To curb excessive
shouting, SHOUT imposes a three-second delay on the shouter.

GOSSIP and its cousins are variants of SHOUT (without the delay).  '.' is a 
synonym for GOSSIP.

YELL sends a message to all awake players within your area.

CHANNELS shows all available channels. Type a channel name by itself to turn 
it off.
~

0 EMOTE PMOTE POSE SOCIAL~
Syntax: emote <action>
Syntax: pose

EMOTE is used to express emotions or actions.  Besides EMOTE, there are
several dozen built-in social commands, such as CACKLE, HUG, and THANK
(type socials or help socials for a listing).

PMOTE is similar to emote, but will substitute you and your for a target's
name (i.e. pmote bonks Alander will be read as bonks you by Alander, and
as bonks Alander by everyone else).

POSE produces a random message.
~

51 SMOTE~
Syntax: smote <action>

Smote works exactly like pmote, except you must place your name somewhere in
the string, and it will show that string to everyone in the room.
~

0 HOLD REMOVE WEAR WIELD~
Syntax: hold   <object>
Syntax: remove <object>
Syntax: wear   <object>
Syntax: wear   all
Syntax: wield  <object>

Three of these commands will take an object from your inventory and start using
it as equipment.  HOLD is for light sources, wands, and staves.  WEAR is for
armor.  WIELD is for weapons.

WEAR ALL will attempt to HOLD, WEAR, or WIELD each suitable item in your
inventory.

You may not be able to HOLD, WEAR, or WIELD an item if its alignment does not
match yours, if it is too heavy for you, or if you are not experienced enough
to use it properly.

REMOVE will take any object from your equipment and put it back into your
inventory.
~

0 BUG TYPO~
Syntax: bug <message>
Syntax: idea <message>
Syntax: typo <message>

These commands will take your message and record it into a file as feedback
to the mud implementors.
~

0 CREDITS~
Syntax: credits

This command shows the list of the original Diku Mud implementors.
~

0 SNIPPETS~
Zucchini has been enriched by the efforts of countless snippeting coders, 
including but not limited to:

Absalom         (study)
Blade of - E -  (builders' autostat commands)
Dribble         (resurrect)
Lope            ({Rc{Yo{Gl{Co{Bu{Mr{x)
Jair            (deity code)
Kharas          (autoquesting)
Markanth	(heel, whisper, various other things)
Robbert         (immortal award function)
Vassago         (autoquesting)
~

0 AREAS COMMANDS REPORT SCORE TIME~
Syntax: areas <level>
Syntax: commands
Syntax: report
Syntax: score
Syntax: time
Syntax: weather

AREAS shows you a list of areas in the game.

COMMANDS shows you all the commands in the game.

REPORT shows your current statistics to you and also announces them to other
players in the room.  SCORE shows much more detailed statistics to you only.
Your ability scores are shown as true value(current value), so for example
Str: 15(23) means you have a 15 strength from training, but a 23 strength
from other factors (spells or items).

TIME shows the game time, as well as the time the mud was last started,
and the current local time for the host computer.

WEATHER shows the current game weather.
~

-1 WHO~
Syntax: who
Syntax: who <level-range>
Syntax: who <class or race>
Syntax: who <clan name>
Syntax: who <class or race> <level-range> <clan name>

WHO shows the people currently in the game.  Some people may choose to
remain unseen and won't appear on the WHO
 
WHO without any arguments shows all of the (visible) people currently playing.

With arguments, WHO can show players of certain classes or levels.
For example:
 
who 10          lists all players of level 10 or above
who 15 20       lists all players between level 15 and 20
who immortal    lists all immortals playing
who elf         lists all elves playing

Classes and races may be abbreviated.
~

-1 WHOIS~
Syntax: whois <name>
The whois command identifies any user who matches the name given. For
example, 'whois a' shows all characters whose name begins with A.
~

0 WHERE~
Syntax: where
Syntax: where <character>

WHERE without an argument tells you the location of visible players in the same
area as you are.

WHERE with an argument tells you the location of one character with that name
within your area, including monsters.
~

0 HELP~
Syntax: help
Syntax: help <keyword>

HELP without any arguments shows a one-page command summary.

HELP <keyword> shows a page of help on that keyword.  The keywords include
all the commands, spells, and skills listed in the game - or so we hope. If you
try a keyword and you don't get a help for it, your query is logged. We'll try
to fix the omission as quickly as possible.
~

0 DESCRIPTION DESC~
Syntax: description <string>
Syntax: description + <string>
Syntax: description - 

Sets your long description to the given string.  If the description string
starts with a '+', the part after the '+' is appended to your current
description, so that you can make multi-line descriptions. You can delete
lines by uses description -.
~

0 PASSWORD~
Syntax: password <old-password> <new-password>

PASSWORD changes your character's password.  The first argument must be
your old password.  The second argument is your new password.

The PASSWORD command is protected against being snooped or logged.
~

0 TITLE~
Syntax: title <string>

Sets your title to a given string.

The game supplies a title when your character is created and when you
advance a level.  You can use TITLE to set your title to something else.
~

0 WIMPY~
Syntax: wimpy
Syntax: wimpy <number>

WIMPY sets your wimpy value.  When your character takes damage that reduces
your hit points below your wimpy value, you will automatically attempt to flee.
You will only flee if your character is not in a wait state -- i.e. has not
been using combat commands like cast, trip and bash, and has not been
tripped or bash by an enemy.

WIMPY with no argument sets your wimpy value to 20% of your maximum hit points.

Some monsters are wimpy.
~

0 OPEN CLOSE LOCK UNLOCK PICK~
Syntax: open   <object|direction>
Syntax: close  <object|direction>
Syntax: lock   <object|direction>
Syntax: unlock <object|direction>
Syntax: pick   <object|direction>

OPEN and CLOSE open and close an object or a door.

LOCK and UNLOCK lock and unlock a closed object or door.  You must have
the requisite key to LOCK or UNLOCK.

PICK can open a lock without having the key.  In order to PICK successfully,
you must practice the appropriate skill.
~

0 DRINK EAT FILL POUR~
Syntax: drink <object>
Syntax: eat   <object>
Syntax: fill  <object>
Syntax: pour  <object> out
Syntax: pour  <object> <object>
Syntax: pour  <object> <character>

When you are thirsty, DRINK something.

When you are hungry, EAT something.

FILL fills a drink container with water.

POUR transfers a liquid to a container, or empties one.
You can also pour from an object into something a character is holding.
~

0 BUY LIST SELL VALUE~
Syntax: buy   <object>
Syntax: list
Syntax: sell  <object>
Syntax: value <object>

BUY buys an object from a shop keeper.
When multiple items of the same name are listed, type 'buy n.item', where n
is the position of the item in a list of that name.  So if there are two
swords, buy 2.sword will buy the second. If you want to buy multiples of
an item, use an * (buy 5*pie will buy 5 pies).  These can be combined into
(for example) buy 2*2.shield, as long as the * is first.  

LIST lists the objects the shop keeper will sell you.
List <name> shows you only objects of that name.

SELL sells an object to a shop keeper.

VALUE asks the shop keeper how much he, she, or it will buy the item for.
~

0 SACRIFICE DONATE~
Syntax: sacrifice <object>
Syntax: donate <object>

SACRIFICE offers an object to your god, who may reward you.
The nature of the reward depends upon the type of object.

DONATE offers an object to the Salvation Army, so that other players may use it.
~

0 SCROLL~
Syntax: scroll
Syntax: scroll <number>

This command changes the number of lines the mud sends you in a page (the 
default is 24 lines).  Change this to a higher number for larger screen
sizes, or to 0 to disabling paging.
~

0 BRANDISH QUAFF RECITE ZAP~
Syntax: brandish
Syntax: quaff    <potion>
Syntax: recite   <scroll> <target>
Syntax: zap      <target>
Syntax: zap

BRANDISH brandishes a magical staff.  QUAFF quaffs a magical potion (as opposed
to DRINK, which drinks mundane liquids).  RECITE recites a magical scroll; the
<target> is optional, depending on the nature of the scroll.  ZAP zaps a
magical wand at a target.  If the target is not specified, and you are fighting
someone, then that character is used for a target.

You must HOLD a wand or a staff before using BRANDISH or ZAP.

All of these commands use up their objects.  Potions and scrolls have a single
charge.  Wands and staves have multiple charges.  When a magical object has no
more charges, it will be consumed.

These commands may require an item skill to be succesful, see the help entries
on the skills scrolls, staves, and wands for more information.
~

0 CONSIDER~
Syntax: consider <character>

CONSIDER tells you what your chances are of killing a character.
Of course, it's only a rough estimate.
~

0 FOLLOW GROUP~
Syntax: follow <character>
Syntax: group
Syntax: group <character>

FOLLOW starts you following another character.  To stop following anyone else,
just FOLLOW <yourself>.

GROUP <character> makes someone who is following you a member of your group.
Group members share experience points from kills and may use the GTELL and
SPLIT commands.  If anyone in your group is attacked, you will automatically
join the fight.

If the <character> is already a member of your group, then GROUP will
kick out the <character> from your group.  Characters can also leave your
group by using a FOLLOW command to stop following you.

GROUP with no argument shows statistics for each character in your group.

You may FOLLOW and GROUP only with characters who are within five levels of
your own.
~

0 VISIBLE~
VISIBLE cancels your hiding and sneaking, as well as any invisibility,
making you visible again.
~

0 QUIT RENT SAVE~
Syntax: QUIT
Syntax: RENT ... not!
Syntax: SAVE

SAVE saves your character and object.  The game saves your character every
15 minutes regardless, and is the preferred method of saving.  Typing save
will block all other command for about 20 seconds, so use it sparingly.
(90+ players all typing save every 30 seconds just generated too much lag)

Some objects, such as keys and potions, may not be saved.

QUIT leaves the game.  You may QUIT anywhere.  When you re-enter the game 
you will be back in the same room.

QUIT automatically does a SAVE, so you can safely leave the game with just one
command.  Nevertheless it's a good idea to SAVE before QUIT.  If you get into
the habit of using QUIT without SAVE, and then you play some other mud that
doesn't save before quitting, you're going to regret it.

There is no RENT in this mud.  Just SAVE and QUIT whenever you want to leave.
~

0 RECALL /~
Syntax: RECALL

RECALL prays to Mota for miraculous transportation from where you are
back to the Temple of Midgaard.  '/' is a synonym for RECALL.

If you RECALL during combat, you will lose experience (more than for fleeing),
and you will have a chance of failing (again, more than for fleeing).  This
chance is based on your recall skill, although a 100% recall does not 
insure success.

RECALL costs half of your movement points.

RECALL doesn't work in certain god-forsaken rooms.  Characters afflicted by a
curse may not recall at all.
~

-1 SPLIT~
Syntax: SPLIT <amount>

SPLIT splits some money  between you and all the members of your
group who are in the same room as you.  It's customary to SPLIT
the loot after a kill.

See also: {gautosplit{x
~

0 STEAL~
Syntax: STEAL coins <character>
Syntax: STEAL <object> <character>

STEAL attempts to steal coins, or an object, from a character.

There are penalties for using STEAL on other players.

In order to STEAL successfully, you must practice the appropriate skill.

See also: {gpeek{x
~

0 PRACTICE~
Syntax: PRACTICE
Syntax: PRACTICE <skill|spell>

PRACTICE without an argument tells you your current ability level in all
the skills and spells available to you.  You can check this anywhere.

PRACTICE with an argument practice that skill or spell.  Your learning
percentage varies from 0% (unlearned) to some maximum between 70% and 100%,
depending on the skill.  You must be at a guild master to practice.

The higher your intelligence, the more you will learn at each practice
session.  The higher your wisdom, the more practice sessions you will
have each time you gain a level.  Unused sessions are saved until you
do use them.
~

0 TRAIN~
Syntax: train <str int wis dex con hp mana>

TRAIN increases one of your attributes.  When you start the game, your
character has standard attributes based on your class, and several
initial training sessions.  You can increase your attributes by
using these sessions at a trainer (there are several in town).

It takes one training session to improve an attribute, or to increase
mana or hp by 10.  You receive one session per level, and can get more as 
quest prizes.

The best attributes to train first are WIS and CON.  WIS gives you more
practice when you gain a level.  CON gives you more hit points.
In the long run, your character will be most powerful if you train
WIS and CON both to 18 before practising or training anything else.
~

-1 $~

#$
